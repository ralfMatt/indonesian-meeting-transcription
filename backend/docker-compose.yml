version: '3.8'

services:
  # Indonesian Meeting Transcription API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: meeting-transcription-api
    restart: unless-stopped
    ports:
      - "3001:3001"  # HTTP API
      - "3002:3002"  # WebSocket
    environment:
      - NODE_ENV=production
      - PORT=3001
      - HOST=0.0.0.0
      - WS_PORT=3002
      # Override these in production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CORS_ORIGIN=http://localhost:3000
      - LOG_LEVEL=info
      - RATE_LIMIT_MAX_REQUESTS=100
      - RATE_LIMIT_WINDOW_MS=900000
      - MAX_FILE_SIZE=100MB
      - CLEANUP_INTERVAL_HOURS=24
      - MAX_FILE_AGE_HOURS=48
    volumes:
      # Persistent storage for uploads and models
      - audio_uploads:/app/uploads/audio
      - processed_audio:/app/uploads/processed
      - whisper_models:/app/models/whisper
      - app_logs:/app/logs
    networks:
      - transcription-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # Redis for caching and session management (optional)
  redis:
    image: redis:7-alpine
    container_name: meeting-transcription-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-defaultpassword}
    volumes:
      - redis_data:/data
    networks:
      - transcription-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true

  # Frontend (optional - for development)
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: meeting-transcription-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3001/api
      - REACT_APP_WS_URL=ws://localhost:3002
    networks:
      - transcription-network
    depends_on:
      - api
    profiles:
      - development

  # Nginx reverse proxy (optional - for production)
  nginx:
    image: nginx:alpine
    container_name: meeting-transcription-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - transcription-network
    depends_on:
      - api
      - frontend
    profiles:
      - production
    security_opt:
      - no-new-privileges:true

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: meeting-transcription-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - transcription-network
    profiles:
      - monitoring
    security_opt:
      - no-new-privileges:true

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: meeting-transcription-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - transcription-network
    depends_on:
      - prometheus
    profiles:
      - monitoring
    security_opt:
      - no-new-privileges:true

networks:
  transcription-network:
    driver: bridge
    name: meeting-transcription-network

volumes:
  audio_uploads:
    name: meeting-transcription-audio
  processed_audio:
    name: meeting-transcription-processed
  whisper_models:
    name: meeting-transcription-models
  app_logs:
    name: meeting-transcription-logs
  redis_data:
    name: meeting-transcription-redis
  prometheus_data:
    name: meeting-transcription-prometheus
  grafana_data:
    name: meeting-transcription-grafana

# Override for development
# docker-compose -f docker-compose.yml -f docker-compose.dev.yml up